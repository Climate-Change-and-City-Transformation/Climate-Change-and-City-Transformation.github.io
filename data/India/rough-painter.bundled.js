(function(){'use strict';function a(a,b){return a.type===b}function b(a){const b=a[0],c=a[1];return n(l(b[0]-c[0],2)+l(b[1]-c[1],2))}function c(a,b){const c=[],d=new x([a[0],a[1]],[a[2],a[3]]);for(let e=0;e<b.length;e++){const a=new x(b[e],b[(e+1)%b.length]);d.intersects(a)&&c.push([d.xi,d.yi])}return c}function d(a,b,c,d,e,f,g){return[-c*f-d*e+c+f*a+e*b,g*(c*e-d*f)+d+-g*e*a+g*f*b]}function e(a,b){const d=[];if(a&&a.length){let e=a[0][0],f=a[0][0],g=a[0][1],l=a[0][1];for(let b=1;b<a.length;b++)e=k(e,a[b][0]),f=j(f,a[b][0]),g=k(g,a[b][1]),l=j(l,a[b][1]);const i=b.hachureAngle;let m=b.hachureGap;0>m&&(m=4*b.strokeWidth),m=j(m,.1);const n=i%180*(s/180),o=p(n),r=q(n),t=h(n),u=new y(g-1,l+1,e-1,f+1,m,r,o,t);for(let b;null!=(b=u.nextLine());){const e=c(b,a);for(let a=0;a<e.length;a++)if(a<e.length-1){const b=e[a],c=e[a+1];d.push([b,c])}}}return d}function f(a,b,c,e,f,g){const i=[];let j=r(c/2),k=r(e/2);j+=g.getOffset(.05*-j,.05*j,f),k+=g.getOffset(.05*-k,.05*k,f);const l=f.hachureAngle;let m=f.hachureGap;0>=m&&(m=4*f.strokeWidth);let o=f.fillWeight;0>o&&(o=f.strokeWidth/2);const p=h(l%180*(s/180)),q=k/j,t=n(q*p*q*p+1),u=q*p/t,v=1/t,w=m/(j*k/n(k*v*(k*v)+j*u*(j*u))/j);let x=n(j*j-(a-j+w)*(a-j+w));for(let h=a-j+w;h<a+j;h+=w){x=n(j*j-(a-h)*(a-h));const c=d(h,b-x,a,b,u,v,q),e=d(h,b+x,a,b,u,v,q);i.push([c,e])}return i}function g(a,b){let c=b.fillStyle||'hachure';if(!D[c])switch(c){case'zigzag':D[c]||(D[c]=new A(a));break;case'cross-hatch':D[c]||(D[c]=new B(a));break;case'dots':D[c]||(D[c]=new C(a));break;case'hachure':default:c='hachure',D[c]||(D[c]=new z(a));}return D[c]}var h=Math.tan,j=Math.max,k=Math.min,i=Number.MAX_VALUE,l=Math.pow,m=Math.ceil,n=Math.sqrt,p=Math.cos,q=Math.sin,r=Math.abs,s=Math.PI;const o={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:4,t:2,V:1,v:1,Z:0,z:0};class t{constructor(a){this.COMMAND=0,this.NUMBER=1,this.EOD=2,this.segments=[],this.parseData(a),this.processPoints()}tokenize(a){const b=[];for(;''!==a;)if(a.match(/^([ \t\r\n,]+)/))a=a.substr(RegExp.$1.length);else if(a.match(/^([aAcChHlLmMqQsStTvVzZ])/))b[b.length]={type:this.COMMAND,text:RegExp.$1},a=a.substr(RegExp.$1.length);else if(a.match(/^(([-+]?[0-9]+(\.[0-9]*)?|[-+]?\.[0-9]+)([eE][-+]?[0-9]+)?)/))b[b.length]={type:this.NUMBER,text:`${parseFloat(RegExp.$1)}`},a=a.substr(RegExp.$1.length);else return console.error('Unrecognized segment command: '+a),[];return b[b.length]={type:this.EOD,text:''},b}parseData(b){const c=this.tokenize(b);let d=0,e=c[d],f='BOD';for(this.segments=[];!a(e,this.EOD);){let g;const h=[];if(!('BOD'===f))a(e,this.NUMBER)?g=o[f]:(d++,g=o[e.text],f=e.text);else if('M'===e.text||'m'===e.text)d++,g=o[e.text],f=e.text;else return void this.parseData('M0,0'+b);if(d+g<c.length){for(let b=d;b<d+g;b++){const d=c[b];if(a(d,this.NUMBER))h[h.length]=+d.text;else return void console.error('Parameter type is not a number: '+f+','+d.text)}if('number'==typeof o[f]){const a={key:f,data:h};this.segments.push(a),d+=g,e=c[d],'M'===f&&(f='L'),'m'===f&&(f='l')}else return void console.error('Unsupported segment type: '+f)}else console.error('Path data ended before all parameters were found')}}get closed(){if('undefined'==typeof this._closed){this._closed=!1;for(const a of this.segments)'z'===a.key.toLowerCase()&&(this._closed=!0)}return this._closed}processPoints(){let a=null,b=[0,0];for(let c=0;c<this.segments.length;c++){const d=this.segments[c];switch(d.key){case'M':case'L':case'T':d.point=[d.data[0],d.data[1]];break;case'm':case'l':case't':d.point=[d.data[0]+b[0],d.data[1]+b[1]];break;case'H':d.point=[d.data[0],b[1]];break;case'h':d.point=[d.data[0]+b[0],b[1]];break;case'V':d.point=[b[0],d.data[0]];break;case'v':d.point=[b[0],d.data[0]+b[1]];break;case'z':case'Z':a&&(d.point=[a[0],a[1]]);break;case'C':d.point=[d.data[4],d.data[5]];break;case'c':d.point=[d.data[4]+b[0],d.data[5]+b[1]];break;case'S':d.point=[d.data[2],d.data[3]];break;case's':d.point=[d.data[2]+b[0],d.data[3]+b[1]];break;case'Q':d.point=[d.data[2],d.data[3]];break;case'q':d.point=[d.data[2]+b[0],d.data[3]+b[1]];break;case'A':d.point=[d.data[5],d.data[6]];break;case'a':d.point=[d.data[5]+b[0],d.data[6]+b[1]];}('m'===d.key||'M'===d.key)&&(a=null),d.point&&(b=d.point,!a&&(a=d.point)),('z'===d.key||'Z'===d.key)&&(a=null)}}}class u{constructor(a){this._position=[0,0],this._first=null,this.bezierReflectionPoint=null,this.quadReflectionPoint=null,this.parsed=new t(a)}get segments(){return this.parsed.segments}get closed(){return this.parsed.closed}get linearPoints(){if(!this._linearPoints){const a=[];let b=[];for(const c of this.parsed.segments){const d=c.key.toLowerCase();('m'===d||'z'===d)&&(b.length&&(a.push(b),b=[]),'z'===d)||c.point&&b.push(c.point)}b.length&&(a.push(b),b=[]),this._linearPoints=a}return this._linearPoints}get first(){return this._first}set first(a){this._first=a}setPosition(a,b){this._position=[a,b],this._first||(this._first=[a,b])}get position(){return this._position}get x(){return this._position[0]}get y(){return this._position[1]}}class v{constructor(a,b,c,d,e,f){if(this._segIndex=0,this._numSegs=0,this._rx=0,this._ry=0,this._sinPhi=0,this._cosPhi=0,this._C=[0,0],this._theta=0,this._delta=0,this._T=0,this._from=a,a[0]===b[0]&&a[1]===b[1])return;const g=s/180;this._rx=r(c[0]),this._ry=r(c[1]),this._sinPhi=q(d*g),this._cosPhi=p(d*g);const h=this._cosPhi*(a[0]-b[0])/2+this._sinPhi*(a[1]-b[1])/2,i=-this._sinPhi*(a[0]-b[0])/2+this._cosPhi*(a[1]-b[1])/2;let j=0;const k=this._rx*this._rx*this._ry*this._ry-this._rx*this._rx*i*i-this._ry*this._ry*h*h;if(0>k){const a=n(1-k/(this._rx*this._rx*this._ry*this._ry));this._rx*=a,this._ry*=a,j=0}else j=(e===f?-1:1)*n(k/(this._rx*this._rx*i*i+this._ry*this._ry*h*h));const l=j*this._rx*i/this._ry,o=-j*this._ry*h/this._rx;this._C=[0,0],this._C[0]=this._cosPhi*l-this._sinPhi*o+(a[0]+b[0])/2,this._C[1]=this._sinPhi*l+this._cosPhi*o+(a[1]+b[1])/2,this._theta=this.calculateVectorAngle(1,0,(h-l)/this._rx,(i-o)/this._ry);let t=this.calculateVectorAngle((h-l)/this._rx,(i-o)/this._ry,(-h-l)/this._rx,(-i-o)/this._ry);!f&&0<t?t-=2*s:f&&0>t&&(t+=2*s),this._numSegs=m(r(t/(s/2))),this._delta=t/this._numSegs,this._T=8/3*q(this._delta/4)*q(this._delta/4)/q(this._delta/2)}getNextSegment(){if(this._segIndex===this._numSegs)return null;const a=p(this._theta),b=q(this._theta),c=this._theta+this._delta,d=p(c),e=q(c),f=[this._cosPhi*this._rx*d-this._sinPhi*this._ry*e+this._C[0],this._sinPhi*this._rx*d+this._cosPhi*this._ry*e+this._C[1]],g=[this._from[0]+this._T*(-this._cosPhi*this._rx*b-this._sinPhi*this._ry*a),this._from[1]+this._T*(-this._sinPhi*this._rx*b+this._cosPhi*this._ry*a)],h=[f[0]+this._T*(this._cosPhi*this._rx*e+this._sinPhi*this._ry*d),f[1]+this._T*(this._sinPhi*this._rx*e-this._cosPhi*this._ry*d)];return this._theta=c,this._from=[f[0],f[1]],this._segIndex++,{cp1:g,cp2:h,to:f}}calculateVectorAngle(a,b,c,d){var e=Math.atan2;const f=e(b,a),g=e(d,c);return g>=f?g-f:2*s-(f-g)}}class w{constructor(a,b){this.sets=a,this.closed=b}fit(a){const b=[];for(const c of this.sets){const d=c.length;let e=Math.floor(a*d);if(5>e){if(5>=d)continue;e=5}b.push(this.reduce(c,e))}let c='';for(const d of b){for(let a=0;a<d.length;a++){const b=d[a];c+=0===a?'M'+b[0]+','+b[1]:'L'+b[0]+','+b[1]}this.closed&&(c+='z ')}return c}distance(a,b){return n(l(a[0]-b[0],2)+l(a[1]-b[1],2))}reduce(a,b){if(a.length<=b)return a;const d=a.slice(0);for(;d.length>b;){let e=-1,f=-1;for(let g=1;g<d.length-1;g++){const h=this.distance(d[g-1],d[g]),a=this.distance(d[g],d[g+1]),b=this.distance(d[g-1],d[g+1]),c=(h+a+b)/2,i=n(c*(c-h)*(c-a)*(c-b));(0>e||i<e)&&(e=i,f=g)}if(0<f)d.splice(f,1);else break}return d}}class x{constructor(a,b){this.xi=i,this.yi=i,this.px1=a[0],this.py1=a[1],this.px2=b[0],this.py2=b[1],this.a=this.py2-this.py1,this.b=this.px1-this.px2,this.c=this.px2*this.py1-this.px1*this.py2,this._undefined=0===this.a&&0===this.b&&0===this.c}isUndefined(){return this._undefined}intersects(d){if(this.isUndefined()||d.isUndefined())return!1;let e=i,f=i,g=0,h=0;const l=this.a,a=this.b,b=this.c;return(1e-5<r(a)&&(e=-l/a,g=-b/a),1e-5<r(d.b)&&(f=-d.a/d.b,h=-d.c/d.b),e===i)?f===i?-b/l==-d.c/d.a&&(this.py1>=k(d.py1,d.py2)&&this.py1<=j(d.py1,d.py2)?(this.xi=this.px1,this.yi=this.py1,!0):!!(this.py2>=k(d.py1,d.py2)&&this.py2<=j(d.py1,d.py2))&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=this.px1,this.yi=f*this.xi+h,!(-1e-5>(this.py1-this.yi)*(this.yi-this.py2)||-1e-5>(d.py1-this.yi)*(this.yi-d.py2))&&(!(1e-5>r(d.a))||!(-1e-5>(d.px1-this.xi)*(this.xi-d.px2)))):f===i?(this.xi=d.px1,this.yi=e*this.xi+g,!(-1e-5>(d.py1-this.yi)*(this.yi-d.py2)||-1e-5>(this.py1-this.yi)*(this.yi-this.py2))&&(!(1e-5>r(l))||!(-1e-5>(this.px1-this.xi)*(this.xi-this.px2)))):e===f?g==h&&(this.px1>=k(d.px1,d.px2)&&this.px1<=j(d.py1,d.py2)?(this.xi=this.px1,this.yi=this.py1,!0):!!(this.px2>=k(d.px1,d.px2)&&this.px2<=j(d.px1,d.px2))&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=(h-g)/(e-f),this.yi=e*this.xi+g,!(-1e-5>(this.px1-this.xi)*(this.xi-this.px2)||-1e-5>(d.px1-this.xi)*(this.xi-d.px2)))}}class y{constructor(a,b,c,d,e,f,g,h){this.deltaX=0,this.hGap=0,this.top=a,this.bottom=b,this.left=c,this.right=d,this.gap=e,this.sinAngle=f,this.tanAngle=h,1e-4>r(f)?this.pos=c+e:.9999<r(f)?this.pos=a+e:(this.deltaX=(b-a)*r(h),this.pos=c-r(this.deltaX),this.hGap=r(e/g),this.sLeft=new x([c,b],[c,a]),this.sRight=new x([d,b],[d,a]))}nextLine(){if(1e-4>r(this.sinAngle)){if(this.pos<this.right){const a=[this.pos,this.top,this.pos,this.bottom];return this.pos+=this.gap,a}}else if(!(.9999<r(this.sinAngle))){let a=this.pos-this.deltaX/2,b=this.pos+this.deltaX/2,c=this.bottom,d=this.top;if(this.pos<this.right+this.deltaX){for(;a<this.left&&b<this.left||a>this.right&&b>this.right;)if(this.pos+=this.hGap,a=this.pos-this.deltaX/2,b=this.pos+this.deltaX/2,this.pos>this.right+this.deltaX)return null;const e=new x([a,c],[b,d]);this.sLeft&&e.intersects(this.sLeft)&&(a=e.xi,c=e.yi),this.sRight&&e.intersects(this.sRight)&&(b=e.xi,d=e.yi),0<this.tanAngle&&(a=this.right-(a-this.left),b=this.right-(b-this.left));const f=[a,c,b,d];return this.pos+=this.hGap,f}}else if(this.pos<this.bottom){const a=[this.left,this.pos,this.right,this.pos];return this.pos+=this.gap,a}return null}}class z{constructor(a){this.renderer=a}fillPolygon(a,b){return this._fillPolygon(a,b)}fillEllipse(a,b,c,d,e){return this._fillEllipse(a,b,c,d,e)}_fillPolygon(a,b,c=!1){const d=e(a,b),f=this.renderLines(d,b,c);return{type:'fillSketch',ops:f}}_fillEllipse(a,b,c,d,e,g=!1){const h=f(a,b,c,d,e,this.renderer),i=this.renderLines(h,e,g);return{type:'fillSketch',ops:i}}renderLines(a,b,c){let d=[],e=null;for(const f of a)d=d.concat(this.renderer.doubleLine(f[0][0],f[0][1],f[1][0],f[1][1],b)),c&&e&&(d=d.concat(this.renderer.doubleLine(e[0],e[1],f[0][0],f[0][1],b))),e=f[1];return d}}class A extends z{fillPolygon(a,b){return this._fillPolygon(a,b,!0)}fillEllipse(a,b,c,d,e){return this._fillEllipse(a,b,c,d,e,!0)}}class B extends z{fillPolygon(a,b){const c=this._fillPolygon(a,b),d=Object.assign({},b,{hachureAngle:b.hachureAngle+90}),e=this._fillPolygon(a,d);return c.ops=c.ops.concat(e.ops),c}fillEllipse(a,b,c,d,e){const f=this._fillEllipse(a,b,c,d,e),g=Object.assign({},e,{hachureAngle:e.hachureAngle+90}),h=this._fillEllipse(a,b,c,d,g);return f.ops=f.ops.concat(h.ops),f}}class C{constructor(a){this.renderer=a}fillPolygon(a,b){b=Object.assign({},b,{curveStepCount:4,hachureAngle:0});const c=e(a,b);return this.dotsOnLines(c,b)}fillEllipse(a,b,c,d,e){e=Object.assign({},e,{curveStepCount:4,hachureAngle:0});const g=f(a,b,c,d,e,this.renderer);return this.dotsOnLines(g,e)}dotsOnLines(a,d){let e=[],f=d.hachureGap;0>f&&(f=4*d.strokeWidth),f=j(f,.1);let g=d.fillWeight;0>g&&(g=d.strokeWidth/2);for(const h of a){const a=b(h),c=a/f,j=m(c)-1,k=Math.atan((h[1][1]-h[0][1])/(h[1][0]-h[0][0]));for(let a=0;a<j;a++){const b=f*(a+1),i=b*q(k),j=b*p(k),l=[h[0][0]-j,h[0][1]+i],c=this.renderer.getOffset(l[0]-f/4,l[0]+f/4,d),m=this.renderer.getOffset(l[1]-f/4,l[1]+f/4,d),n=this.renderer.ellipse(c,m,g,g,d);e=e.concat(n.ops)}}return{type:'fillSketch',ops:e}}}const D={};class E{line(a,b,c,d,e){const f=this.doubleLine(a,b,c,d,e);return{type:'path',ops:f}}linearPath(a,b,c){const d=(a||[]).length;if(2<d){let e=[];for(let b=0;b<d-1;b++)e=e.concat(this.doubleLine(a[b][0],a[b][1],a[b+1][0],a[b+1][1],c));return b&&(e=e.concat(this.doubleLine(a[d-1][0],a[d-1][1],a[0][0],a[0][1],c))),{type:'path',ops:e}}return 2===d?this.line(a[0][0],a[0][1],a[1][0],a[1][1],c):{type:'path',ops:[]}}polygon(a,b){return this.linearPath(a,!0,b)}rectangle(a,b,c,d,e){return this.polygon([[a,b],[a+c,b],[a+c,b+d],[a,b+d]],e)}curve(a,b){const c=this._curveWithOffset(a,1*(1+.2*b.roughness),b),d=this._curveWithOffset(a,1.5*(1+.22*b.roughness),b);return{type:'path',ops:c.concat(d)}}ellipse(a,b,c,d,e){const f=2*s/e.curveStepCount;let g=r(c/2),h=r(d/2);g+=this.getOffset(.05*-g,.05*g,e),h+=this.getOffset(.05*-h,.05*h,e);const i=this._ellipse(f,a,b,g,h,1,f*this.getOffset(.1,this.getOffset(.4,1,e),e),e),j=this._ellipse(f,a,b,g,h,1.5,0,e);return{type:'path',ops:i.concat(j)}}arc(a,b,c,d,e,f,g,h,i){const j=a,l=b;let m=r(c/2),n=r(d/2);m+=this.getOffset(.01*-m,.01*m,i),n+=this.getOffset(.01*-n,.01*n,i);let o=e,t=f;for(;0>o;)o+=2*s,t+=2*s;t-o>2*s&&(o=0,t=2*s);const u=2*s/i.curveStepCount,v=k(u/2,(t-o)/2),w=this._arc(v,j,l,m,n,o,t,1,i),x=this._arc(v,j,l,m,n,o,t,1.5,i);let y=w.concat(x);return g&&(h?(y=y.concat(this.doubleLine(j,l,j+m*p(o),l+n*q(o),i)),y=y.concat(this.doubleLine(j,l,j+m*p(t),l+n*q(t),i))):(y.push({op:'lineTo',data:[j,l]}),y.push({op:'lineTo',data:[j+m*p(o),l+n*q(o)]}))),{type:'path',ops:y}}svgPath(a,b){a=(a||'').replace(/\n/g,' ').replace(/(-\s)/g,'-').replace('/(ss)/g',' ');let c=new u(a);if(b.simplification){const a=new w(c.linearPoints,c.closed),e=a.fit(b.simplification);c=new u(e)}let d=[];const e=c.segments||[];for(let f=0;f<e.length;f++){const a=e[f],g=0<f?e[f-1]:null,h=this._processSegment(c,a,g,b);h&&h.length&&(d=d.concat(h))}return{type:'path',ops:d}}solidFillPolygon(a,b){const c=[];if(a.length){const d=b.maxRandomnessOffset||0,e=a.length;if(2<e){c.push({op:'move',data:[a[0][0]+this.getOffset(-d,d,b),a[0][1]+this.getOffset(-d,d,b)]});for(let f=1;f<e;f++)c.push({op:'lineTo',data:[a[f][0]+this.getOffset(-d,d,b),a[f][1]+this.getOffset(-d,d,b)]})}}return{type:'fillPath',ops:c}}patternFillPolygon(a,b){const c=g(this,b);return c.fillPolygon(a,b)}patternFillEllipse(a,b,c,d,e){const f=g(this,e);return f.fillEllipse(a,b,c,d,e)}patternFillArc(a,b,c,d,e,f,g){const h=a,i=b;let j=r(c/2),k=r(d/2);j+=this.getOffset(.01*-j,.01*j,g),k+=this.getOffset(.01*-k,.01*k,g);let l=e,m=f;for(;0>l;)l+=2*s,m+=2*s;m-l>2*s&&(l=0,m=2*s);const n=(m-l)/g.curveStepCount,o=[];for(let r=l;r<=m;r+=n)o.push([h+j*p(r),i+k*q(r)]);return o.push([h+j*p(m),i+k*q(m)]),o.push([h,i]),this.patternFillPolygon(o,g)}getOffset(a,b,c){return c.roughness*(Math.random()*(b-a)+a)}doubleLine(a,b,c,d,e){const f=this._line(a,b,c,d,e,!0,!1),g=this._line(a,b,c,d,e,!0,!0);return f.concat(g)}_line(a,b,c,d,e,f,g){const h=l(a-c,2)+l(b-d,2);let i=e.maxRandomnessOffset||0;100*(i*i)>h&&(i=n(h)/10);const j=i/2,k=.2+.2*Math.random();let m=e.bowing*e.maxRandomnessOffset*(d-b)/200,o=e.bowing*e.maxRandomnessOffset*(a-c)/200;m=this.getOffset(-m,m,e),o=this.getOffset(-o,o,e);const p=[];return f&&(g?p.push({op:'move',data:[a+this.getOffset(-j,j,e),b+this.getOffset(-j,j,e)]}):p.push({op:'move',data:[a+this.getOffset(-i,i,e),b+this.getOffset(-i,i,e)]})),g?p.push({op:'bcurveTo',data:[m+a+(c-a)*k+this.getOffset(-j,j,e),o+b+(d-b)*k+this.getOffset(-j,j,e),m+a+2*(c-a)*k+this.getOffset(-j,j,e),o+b+2*(d-b)*k+this.getOffset(-j,j,e),c+this.getOffset(-j,j,e),d+this.getOffset(-j,j,e)]}):p.push({op:'bcurveTo',data:[m+a+(c-a)*k+this.getOffset(-i,i,e),o+b+(d-b)*k+this.getOffset(-i,i,e),m+a+2*(c-a)*k+this.getOffset(-i,i,e),o+b+2*(d-b)*k+this.getOffset(-i,i,e),c+this.getOffset(-i,i,e),d+this.getOffset(-i,i,e)]}),p}_curve(a,c,d){const e=a.length;let f=[];if(3<e){const g=[],b=1-d.curveTightness;f.push({op:'move',data:[a[1][0],a[1][1]]});for(let c=1;c+2<e;c++){const d=a[c];g[0]=[d[0],d[1]],g[1]=[d[0]+(b*a[c+1][0]-b*a[c-1][0])/6,d[1]+(b*a[c+1][1]-b*a[c-1][1])/6],g[2]=[a[c+1][0]+(b*a[c][0]-b*a[c+2][0])/6,a[c+1][1]+(b*a[c][1]-b*a[c+2][1])/6],g[3]=[a[c+1][0],a[c+1][1]],f.push({op:'bcurveTo',data:[g[1][0],g[1][1],g[2][0],g[2][1],g[3][0],g[3][1]]})}if(c&&2===c.length){const a=d.maxRandomnessOffset;f.push({op:'lineTo',data:[c[0]+this.getOffset(-a,a,d),c[1]+ +this.getOffset(-a,a,d)]})}}else 3===e?(f.push({op:'move',data:[a[1][0],a[1][1]]}),f.push({op:'bcurveTo',data:[a[1][0],a[1][1],a[2][0],a[2][1],a[2][0],a[2][1]]})):2===e&&(f=f.concat(this.doubleLine(a[0][0],a[0][1],a[1][0],a[1][1],d)));return f}_ellipse(a,b,c,d,e,f,g,h){const i=this.getOffset(-.5,.5,h)-s/2,j=[];j.push([this.getOffset(-f,f,h)+b+.9*d*p(i-a),this.getOffset(-f,f,h)+c+.9*e*q(i-a)]);for(let k=i;k<2*s+i-.01;k+=a)j.push([this.getOffset(-f,f,h)+b+d*p(k),this.getOffset(-f,f,h)+c+e*q(k)]);return j.push([this.getOffset(-f,f,h)+b+d*p(i+2*s+.5*g),this.getOffset(-f,f,h)+c+e*q(i+2*s+.5*g)]),j.push([this.getOffset(-f,f,h)+b+.98*d*p(i+g),this.getOffset(-f,f,h)+c+.98*e*q(i+g)]),j.push([this.getOffset(-f,f,h)+b+.9*d*p(i+.5*g),this.getOffset(-f,f,h)+c+.9*e*q(i+.5*g)]),this._curve(j,null,h)}_curveWithOffset(a,b,c){const d=[[a[0][0]+this.getOffset(-b,b,c),a[0][1]+this.getOffset(-b,b,c)],[a[0][0]+this.getOffset(-b,b,c),a[0][1]+this.getOffset(-b,b,c)]];for(let e=1;e<a.length;e++)d.push([a[e][0]+this.getOffset(-b,b,c),a[e][1]+this.getOffset(-b,b,c)]),e===a.length-1&&d.push([a[e][0]+this.getOffset(-b,b,c),a[e][1]+this.getOffset(-b,b,c)]);return this._curve(d,null,c)}_arc(a,b,c,d,e,f,g,h,i){const j=f+this.getOffset(-.1,.1,i),k=[];k.push([this.getOffset(-h,h,i)+b+.9*d*p(j-a),this.getOffset(-h,h,i)+c+.9*e*q(j-a)]);for(let l=j;l<=g;l+=a)k.push([this.getOffset(-h,h,i)+b+d*p(l),this.getOffset(-h,h,i)+c+e*q(l)]);return k.push([b+d*p(g),c+e*q(g)]),k.push([b+d*p(g),c+e*q(g)]),this._curve(k,null,i)}_bezierTo(a,b,c,d,e,g,h,j){const k=[],l=[j.maxRandomnessOffset||1,(j.maxRandomnessOffset||1)+.5];let m=[0,0];for(let f=0;2>f;f++)0===f?k.push({op:'move',data:[h.x,h.y]}):k.push({op:'move',data:[h.x+this.getOffset(-l[0],l[0],j),h.y+this.getOffset(-l[0],l[0],j)]}),m=[e+this.getOffset(-l[f],l[f],j),g+this.getOffset(-l[f],l[f],j)],k.push({op:'bcurveTo',data:[a+this.getOffset(-l[f],l[f],j),b+this.getOffset(-l[f],l[f],j),c+this.getOffset(-l[f],l[f],j),d+this.getOffset(-l[f],l[f],j),m[0],m[1]]});return h.setPosition(m[0],m[1]),k}_processSegment(a,b,c,d){let e=[];switch(b.key){case'M':case'm':{const c='m'===b.key;if(2<=b.data.length){let f=+b.data[0],g=+b.data[1];c&&(f+=a.x,g+=a.y);const h=1*(d.maxRandomnessOffset||0);f+=this.getOffset(-h,h,d),g+=this.getOffset(-h,h,d),a.setPosition(f,g),e.push({op:'move',data:[f,g]})}break}case'L':case'l':{const c='l'===b.key;if(2<=b.data.length){let f=+b.data[0],g=+b.data[1];c&&(f+=a.x,g+=a.y),e=e.concat(this.doubleLine(a.x,a.y,f,g,d)),a.setPosition(f,g)}break}case'H':case'h':{const c='h'===b.key;if(b.data.length){let f=+b.data[0];c&&(f+=a.x),e=e.concat(this.doubleLine(a.x,a.y,f,a.y,d)),a.setPosition(f,a.y)}break}case'V':case'v':{const c='v'===b.key;if(b.data.length){let f=+b.data[0];c&&(f+=a.y),e=e.concat(this.doubleLine(a.x,a.y,a.x,f,d)),a.setPosition(a.x,f)}break}case'Z':case'z':{a.first&&(e=e.concat(this.doubleLine(a.x,a.y,a.first[0],a.first[1],d)),a.setPosition(a.first[0],a.first[1]),a.first=null);break}case'C':case'c':{const c='c'===b.key;if(6<=b.data.length){let f=+b.data[0],g=+b.data[1],h=+b.data[2],i=+b.data[3],j=+b.data[4],k=+b.data[5];c&&(f+=a.x,h+=a.x,j+=a.x,g+=a.y,i+=a.y,k+=a.y);const l=this._bezierTo(f,g,h,i,j,k,a,d);e=e.concat(l),a.bezierReflectionPoint=[j+(j-h),k+(k-i)]}break}case'S':case's':{const f='s'===b.key;if(4<=b.data.length){let g=+b.data[0],h=+b.data[1],i=+b.data[2],j=+b.data[3];f&&(g+=a.x,i+=a.x,h+=a.y,j+=a.y);let k=g,l=h;const m=c?c.key:'';let n=null;('c'===m||'C'===m||'s'===m||'S'===m)&&(n=a.bezierReflectionPoint),n&&(k=n[0],l=n[1]);const o=this._bezierTo(k,l,g,h,i,j,a,d);e=e.concat(o),a.bezierReflectionPoint=[i+(i-g),j+(j-h)]}break}case'Q':case'q':{const c='q'===b.key;if(4<=b.data.length){let g=+b.data[0],h=+b.data[1],i=+b.data[2],j=+b.data[3];c&&(g+=a.x,i+=a.x,h+=a.y,j+=a.y);const k=1*(1+.2*d.roughness),l=1.5*(1+.22*d.roughness);e.push({op:'move',data:[a.x+this.getOffset(-k,k,d),a.y+this.getOffset(-k,k,d)]});let m=[i+this.getOffset(-k,k,d),j+this.getOffset(-k,k,d)];e.push({op:'qcurveTo',data:[g+this.getOffset(-k,k,d),h+this.getOffset(-k,k,d),m[0],m[1]]}),e.push({op:'move',data:[a.x+this.getOffset(-l,l,d),a.y+this.getOffset(-l,l,d)]}),m=[i+this.getOffset(-l,l,d),j+this.getOffset(-l,l,d)],e.push({op:'qcurveTo',data:[g+this.getOffset(-l,l,d),h+this.getOffset(-l,l,d),m[0],m[1]]}),a.setPosition(m[0],m[1]),a.quadReflectionPoint=[i+(i-g),j+(j-h)]}break}case'T':case't':{const g='t'===b.key;if(2<=b.data.length){let h=+b.data[0],i=+b.data[1];g&&(h+=a.x,i+=a.y);let j=h,k=i;const l=c?c.key:'';let m=null;('q'===l||'Q'===l||'t'===l||'T'===l)&&(m=a.quadReflectionPoint),m&&(j=m[0],k=m[1]);const n=1*(1+.2*d.roughness),o=1.5*(1+.22*d.roughness);e.push({op:'move',data:[a.x+this.getOffset(-n,n,d),a.y+this.getOffset(-n,n,d)]});let p=[h+this.getOffset(-n,n,d),i+this.getOffset(-n,n,d)];e.push({op:'qcurveTo',data:[j+this.getOffset(-n,n,d),k+this.getOffset(-n,n,d),p[0],p[1]]}),e.push({op:'move',data:[a.x+this.getOffset(-o,o,d),a.y+this.getOffset(-o,o,d)]}),p=[h+this.getOffset(-o,o,d),i+this.getOffset(-o,o,d)],e.push({op:'qcurveTo',data:[j+this.getOffset(-o,o,d),k+this.getOffset(-o,o,d),p[0],p[1]]}),a.setPosition(p[0],p[1]),a.quadReflectionPoint=[h+(h-j),i+(i-k)]}break}case'A':case'a':{const c='a'===b.key;if(7<=b.data.length){const f=+b.data[0],g=+b.data[1],h=+b.data[2],i=+b.data[3],j=+b.data[4];let k=+b.data[5],l=+b.data[6];if(c&&(k+=a.x,l+=a.y),k===a.x&&l===a.y)break;if(0==f||0==g)e=e.concat(this.doubleLine(a.x,a.y,k,l,d)),a.setPosition(k,l);else for(let b=0;1>b;b++){const b=new v([a.x,a.y],[k,l],[f,g],h,!!i,!!j);for(let c=b.getNextSegment();c;){const f=this._bezierTo(c.cp1[0],c.cp1[1],c.cp2[0],c.cp2[1],c.to[0],c.to[1],a,d);e=e.concat(f),c=b.getNextSegment()}}}break}default:}return e}}class F{static get inputProperties(){return['--rough-fill','--rough-fill-style','--rough-roughness','--rough-hachure-gap','--rough-hachure-angle','--rough-fill-weight','--rough-border-color','--rough-border-width']}constructor(){this.renderer=new E,this.defaultOptions={maxRandomnessOffset:2,roughness:1,bowing:1,stroke:'#000',strokeWidth:1,curveTightness:0,curveStepCount:9,fill:null,fillStyle:'hachure',fillWeight:-1,hachureAngle:-41,hachureGap:-1}}_setFloatOption(a,b,c,d){a.get(b).length&&(d[c]=parseFloat(a.get(b).toString().trim()))}_setStringOption(a,b,c,d){a.get(b).length&&(d[c]=a.get(b).toString().trim())}paint(a,b,c){const d={};this._setFloatOption(c,'--rough-roughness','roughness',d),this._setFloatOption(c,'--rough-hachure-gap','hachureGap',d),this._setFloatOption(c,'--rough-hachure-angle','hachureAngle',d),this._setFloatOption(c,'--rough-fill-weight','fillWeight',d),this._setFloatOption(c,'--rough-border-width','strokeWidth',d),this._setStringOption(c,'--rough-fill-style','fillStyle',d),this._setStringOption(c,'--rough-fill','fill',d),this._setStringOption(c,'--rough-border-color','stroke',d);const e=Object.assign({},this.defaultOptions,d),f=d.strokeWidth||0,g=[[0+f,0+f],[b.width-f,0+f],[b.width-f,b.height-f],[0+f,b.height-f]],h=[];d.fill&&('solid'===e.fillStyle?h.push(this.renderer.solidFillPolygon(g,e)):h.push(this.renderer.patternFillPolygon(g,e))),d.strokeWidth&&0<d.strokeWidth&&h.push(this.renderer.polygon(g,e)),this._drawOps(h,e,a)}_drawOps(a,b,c){for(const d of a)switch(d.type){case'path':c.save(),c.strokeStyle=b.stroke,c.lineWidth=b.strokeWidth,this._drawToContext(c,d),c.restore();break;case'fillPath':c.save(),c.fillStyle=b.fill||'',this._drawToContext(c,d),c.restore();break;case'fillSketch':this._fillSketch(c,d,b);}}_fillSketch(a,b,c){let d=c.fillWeight;0>d&&(d=c.strokeWidth/2),a.save(),a.strokeStyle=c.fill||'',a.lineWidth=d,this._drawToContext(a,b),a.restore()}_drawToContext(a,b){a.beginPath();for(const c of b.ops){const b=c.data;switch(c.op){case'move':a.moveTo(b[0],b[1]);break;case'bcurveTo':a.bezierCurveTo(b[0],b[1],b[2],b[3],b[4],b[5]);break;case'qcurveTo':a.quadraticCurveTo(b[0],b[1],b[2],b[3]);break;case'lineTo':a.lineTo(b[0],b[1]);}}'fillPath'===b.type?a.fill():a.stroke()}}registerPaint('rough-painter',F)})();
